@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient http
@using EnglishMasterWebAssembly.Shared.Models
@using Microsoft.AspNetCore.WebUtilities
<PageTitle>Menu</PageTitle>
<div class="wave-area">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1200 200" width="1200" height="200">
        <defs>
            <path d="M 0,0 v 100,0 q 150,50 300,0 t 300,0 q 150,50 300,0 t 300,0 v 0,-100 Z" id="wave" />
        </defs>
        <use xlink:href="#wave" />
        <use xlink:href="#wave" x="-30" y="10" />
        <use xlink:href="#wave" x="-60" />
    </svg>
    <div class="p-1" style="transform:translateY(-50px);">
        @if (_isLoading)
        {
            <div class="w-100 d-flex justify-content-center">
                <div class="spinner-border"></div>
            </div>
        }
        else
        {
            <h3>Welcome back, @_fullName !</h3>
        }
        <div class="p-1">
            <h4>Your score</h4>
            <div></div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Count</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Total</td>
                        <td>@_totalAnswerCount</td>
                    </tr>
                    <tr>
                        <td>Correct</td>
                        <td>@_totalCorrectCount</td>
                    </tr>
                    <tr>
                        <td>Incorrect</td>
                        <td>@_totalIncorrectCount</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@code {
    private bool _isLoading = true;
    private string _fullName = "Guest";
    private int? _totalAnswerCount = null;
    private int? _totalCorrectCount = null;
    private int? _totalIncorrectCount = null;
    protected override async Task OnInitializedAsync()
    {
        var userID = await localStorage.GetItemAsync<long>("USER_ID");
        var user = await http.GetFromJsonAsync<User>($"User?id={userID}");
        _fullName = user == null ? "Guest" : $"{user.FirstName} {user.LastName}";
        _isLoading = false;
        _totalAnswerCount = await localStorage.GetItemAsync<int>("ALL_COUNT");
        _totalCorrectCount = await localStorage.GetItemAsync<int>("CORRECT_COUNT");
        _totalIncorrectCount = await localStorage.GetItemAsync<int>("IN_CORRECT_COUNT");
    }
}
