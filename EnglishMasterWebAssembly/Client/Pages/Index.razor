@page "/"
@using EnglishMasterWebAssembly.Shared.Models
@inject HttpClient Http
<PageTitle>Question</PageTitle>
<div class="container">
    <div class="spinner-area">
        <p>モード</p>
        <select>
            <option>練習</option>
            <option>試験</option>
        </select>
        <p>品詞</p>
        @if (PartOfSpeechList == null)
        {
            <div class="spinner-border"></div>
        }
        else
        {
            <select>
                @foreach (var item in PartOfSpeechList)
                {
                    <option>@item.InJapanese</option>
                }
            </select>
        }
    </div>
    <div class="question-area">
        @if (WordList == null || Questions == null)
        {
            <div class="spinner-border"></div>
        }
        else
        {
            <p class="question">@WordList.First(a =>a.Id == Question.WordId).Word1</p>
            <hr />
            <p class="count">@(Idx + 1)/@Questions.Count</p>
        }
    </div>
    <div class="answer-area">
        <button>1</button>
        <button>2</button>
        <button>3</button>
        <button>4</button>
    </div>
    <div class="navigation-area">
        <button>&#xE892;</button>
        <button>&#xE893;</button>
    </div>
</div>
@code {
    private List<Vocabulary> VocabularyList = null;
    private List<Word> WordList = null;
    private List<PartOfSpeech> PartOfSpeechList = null;
    private List<Vocabulary> Questions = null;
    private Vocabulary Question;
    private int Idx = 0;

    protected override async Task OnInitializedAsync()
    {
        WordList = await Http.GetFromJsonAsync<List<Word>>("Word");
        PartOfSpeechList = await Http.GetFromJsonAsync<List<PartOfSpeech>>("PartOfSpeech");
        VocabularyList = await Http.GetFromJsonAsync<List<Vocabulary>>("Vocabulary");
        Questions = VocabularyList.GetQuestions();
        Question = Questions[Idx];
    }
}