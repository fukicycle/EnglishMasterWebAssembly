@page "/"
@using EnglishMasterWebAssembly.Shared.Models
@inject HttpClient Http
<PageTitle>Question</PageTitle>
<div class="container">
    <div class="spinner-area">
        <p>モード</p>
        <select disabled>
            <option>練習</option>
            <option>試験</option>
        </select>
        <p>品詞</p>
        <select onchange="@PartOfSpeechChanged">
            @foreach (var item in PartOfSpeechList)
            {
                <option value="@item.Id">@item.InJapanese</option>
            }
        </select>
    </div>
    <div class="question-area">
        @if (WordList == null || Questions == null)
        {
            <p class="question">Loading...</p>
            <hr />
            <p class="count">0/0</p>
        }
        else
        {
            if (IsPass == null)
            {
                <p class="question">@(WordList.FirstOrDefault(a => a.Id == Question.WordId)?.Word1 ?? "No word")</p>
                <hr />
                <p class="count">@(Idx + 1)/@Questions.Count</p>
            }
            else if (IsPass == true)
            {
                <p class="question">@(WordList.FirstOrDefault(a => a.Id == Question.WordId)?.Word1 ?? "No word")</p>
                <p class="text-success">Correct !</p>
                <hr />
                <p class="count">@(Idx + 1)/@Questions.Count</p>
            }
            else
            {
                <p class="question">@(WordList.FirstOrDefault(a => a.Id == Question.WordId)?.Word1 ?? "No word")</p>
                <p class="text-danger">Incorrect !</p>
                <hr />
                <p class="count">@(Idx + 1)/@Questions.Count</p>
            }
        }
    </div>
    <div class="answer-area">
        @if (Question.WordId == 0)
        {
            <div class="spinner-border"></div>
        }
        else
        {
            @if (Question.WordId == 0)
            {
            }
            else
            {
                @foreach (var item in AnswerList)
                {
                    <button @onclick="@(() => AnswerButtonOnClick(item.Id))">@item.Meaning</button>
                }
            }
        }
    </div>
    <div class="navigation-area">
        @if (Question != null)
        {
            <button @onclick="@MovePrev"><span class="oi oi-chevron-left"></span></button>
            <button @onclick="@MoveNext"><span class="oi oi-chevron-right"></span></button>
        }
    </div>
</div>
@code {
    private List<Vocabulary> VocabularyList = new();
    private List<Word> WordList = new();
    private List<PartOfSpeech> PartOfSpeechList = new();
    private List<Vocabulary> Questions = new();
    private Vocabulary Question = new();
    private List<Vocabulary> AnswerList = new();
    private int Idx = 0;
    private bool? IsPass = null;

    protected override async Task OnInitializedAsync()
    {
        WordList = await Http.GetFromJsonAsync<List<Word>>("Word") ?? new();
        PartOfSpeechList = await Http.GetFromJsonAsync<List<PartOfSpeech>>("PartOfSpeech") ?? new();
        VocabularyList = await Http.GetFromJsonAsync<List<Vocabulary>>("Vocabulary") ?? new();
        Questions = VocabularyList.Where(a => a.PartOfSpeechId == PartOfSpeechList.First().Id).GetQuestions().ToList() ?? new();
        Question = Questions[Idx];
        AnswerList = VocabularyList.GetAnswer(Question).ToList();
    }

    private void MovePrev()
    {
        if (Questions.Count == 0) return;
        IsPass = null;
        Idx = Idx - 1;
        if (Idx < 0) Idx = 0;
        Question = Questions[Idx];
        AnswerList = VocabularyList.GetAnswer(Question).ToList();
    }

    private void MoveNext()
    {
        if (Questions.Count == 0) return;
        IsPass = null;
        Idx = Idx + 1;
        if (Idx >= Questions.Count) Idx = Questions.Count - 1;
        Question = Questions[Idx];
        AnswerList = VocabularyList.GetAnswer(Question).ToList();
    }

    private void PartOfSpeechChanged(ChangeEventArgs e)
    {
        IsPass = null;
        Idx = 0;
        Questions = VocabularyList.Where(a => a.PartOfSpeechId == int.Parse(e.Value.ToString())).GetQuestions().ToList();
        if (Questions.Count > 0)
            Question = Questions[Idx];
        else
            Question = new Vocabulary();
        AnswerList = VocabularyList.GetAnswer(Question).ToList();
    }

    private void AnswerButtonOnClick(long id)
    {
        IsPass = null;
        if (Question.Id == id)
        {
            IsPass = true;
        }
        else
        {
            IsPass = false;
        }
    }
}