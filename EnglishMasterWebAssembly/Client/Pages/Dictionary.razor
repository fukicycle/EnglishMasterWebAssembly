@page "/Dictionary"
@using EnglishMasterWebAssembly.Shared.Models
@using System.Timers
@using Newtonsoft.Json
@inject HttpClient Http
<div class="main-area">
    <div class="d-flex align-items-start">
        <div class="nav flex-column nav-pills"
             id="v-pills-tab"
             role="tablist"
             aria-orientation="vertical">
            @foreach (var item in WordList.GroupBy(a => a.Word1.ToUpper().First()).OrderBy(a => Convert.ToInt16(a.Key)))
            {
                string class1 = "";
                if (item.Key == 'A')
                {
                    class1 = "nav-link nav-icon-round active";
                }
                else
                {
                    class1 = "nav-link nav-icon-round";
                }
                <button class="@class1"
                        id="v-pills-home-tab"
                        data-bs-toggle="pill"
                        data-bs-target="#v-pills-@item.Key"
                        type="button"
                        role="tab"
                        aria-controls="v-pills-home"
                        aria-selected="true">
                    @item.Key
                </button>
            }
        </div>
        <div class="tab-content" id="v-pills-tabContent">
            @foreach (var item in WordList.GroupBy(a => a.Word1.ToUpper().First()).OrderBy(a => Convert.ToInt16(a.Key)))
            {
                string class1 = "";
                if (item.Key == 'A')
                {
                    class1 = "dictionary-list tab-pane fade show active";
                }
                else
                {
                    class1 = "dictionary-list tab-pane fade show";
                }
                <div class="@class1"
                     id="v-pills-@item.Key"
                     role="tabpanel"
                     aria-labelledby="v-pills-home-tab">
                    @foreach (var item1 in item)
                    {
                        <div class="word-title">@item1.Word1</div>
                    }
                </div>
            }
        </div>
    </div>
</div>
@code {
    private List<Vocabulary> VocabularyList = new();
    private List<Word> WordList = new();
    protected override async Task OnInitializedAsync()
    {
        WordList = await Http.GetFromJsonAsync<List<Word>>("Word") ?? new();
        VocabularyList = await Http.GetFromJsonAsync<List<Vocabulary>>("Vocabulary") ?? new();
    }
}

