@page "/Result"
@using Newtonsoft.Json
@using EnglishMasterWebAssembly.Shared.Models
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject HttpClient Http
<div class="result-area">
    <h3>Result</h3>
    <p>Answer count: @ResultList.Count/25</p>
    <p>Incorrect count: @ResultList.Count(a => a.Value == false)</p>
    <p>Correct count: @ResultList.Count(a => a.Value)</p>
    @if (ResultList.Count(a => a.Value) == 25)
    {
        <h4 class="text-success">Great!</h4>
    }
    else if (ResultList.Count(a => a.Value) >= 23)
    {
        <h4 class="text-info">Good!</h4>
    }
    else if (ResultList.Count(a => a.Value) <= 10)
    {
        <h4 class="text-danger">Bad...</h4>
    }
    else
    {
        <h4 class="text-secondary">Normal</h4>
    }
</div>
@code {
    private List<Vocabulary> VocabularyList;
    private Dictionary<long, bool> ResultList = new();
    protected override async Task OnInitializedAsync()
    {
        VocabularyList = await Http.GetFromJsonAsync<List<Vocabulary>>("Vocabulary") ?? new();
        ResultList = JsonConvert.DeserializeObject<Dictionary<long, bool>>(await sessionStorage.GetItemAsStringAsync("TestResult"));
    }
}

