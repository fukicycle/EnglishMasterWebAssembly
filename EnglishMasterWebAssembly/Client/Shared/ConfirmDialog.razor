﻿<div class="h-100 align-items-center modal fade @classShow" tabindex="-1" style="display: @display;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="color:black;">@Title</h5>
            </div>
            <div class="modal-body" style="color:black;">
                @Message
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="() => SelectAction(false)">@CancelButtonCaption</button>
                <button type="button" class="btn btn-primary" @onclick="() => SelectAction(true)">@OKButtonCaption</button>
            </div>
        </div>
    </div>
</div>

<div class="modal-backdrop fade @classShow" style="display: @display;"></div>

@code {
    [Parameter]
    public string Title { get; set; } = "Dialog title";

    [Parameter]
    public string Message { get; set; } = "Message";

    [Parameter]
    public string OKButtonCaption { get; set; } = "OK";

    [Parameter]
    public string CancelButtonCaption { get; set; } = "Cancel";

    [Parameter]
    public EventCallback<bool> ActionSelected { get; set; }

    private string display = "none;";
    private string classShow = "";

    public async Task ShowDialog()
    {
        display = "flex";
        await Task.Delay(50);
        classShow = "show";
        StateHasChanged();
    }

    private async Task HideDialog()
    {
        classShow = "";
        await Task.Delay(200);
        display = "none";
        StateHasChanged();
    }

    private async Task SelectAction(bool value)
    {
        await HideDialog();
        await ActionSelected.InvokeAsync(value);
    }
}