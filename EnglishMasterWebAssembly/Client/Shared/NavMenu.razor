@inject NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient http
@using EnglishMasterWebAssembly.Shared.Models
@using Microsoft.AspNetCore.WebUtilities
<nav class="navbar navbar-light box-shadow">
    <div class="container">
        <a class="navbar-brand" href="">English Master</a>
        <div class="d-flex justify-right">
            @if (_userID == 0)
            {
                <NavLink class="nav-item" @onclick=@NavigateToLoginPage>
                    <span class="oi oi-account-login menu-item"></span>
                </NavLink>
            }
            else
            {
                <NavLink class="nav-item" @onclick=@NavigateToUserPage>
                    <span class="oi menu-item">@_user?.FirstName?.Substring(0, 1).ToUpper()</span>
                </NavLink>
            }
        </div>
    </div>
</nav>
@code {
    private long _userID = 0;
    private User? _user = null;

    protected override async Task OnInitializedAsync()
    {
        _userID = await localStorage.GetItemAsync<long>("USER_ID");
        _user = await http.GetFromJsonAsync<User>($"User?id={_userID}");
    }

    private void NavigateToLoginPage()
    {
        var queryParameter = new Dictionary<string, string>
            {
                ["RedirectURL"] = navigationManager.Uri
            };
        navigationManager.NavigateTo(QueryHelpers.AddQueryString("Login", queryParameter));
    }

    private void NavigateToUserPage()
    {
        var queryParameter = new Dictionary<string, string>
            {
                ["RedirectURL"] = navigationManager.Uri
            };
        navigationManager.NavigateTo(QueryHelpers.AddQueryString("UserPage", queryParameter));
    }
}
